// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseManagement.Contexts;

#nullable disable

namespace WarehouseManagement.Migrations
{
    [DbContext(typeof(WMSContext))]
    [Migration("20221122121726_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarehouseManagement.Entits.Containerr", b =>
                {
                    b.Property<int>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContainerId"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContainerId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Dimension")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("actualInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("actualOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expectedInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("expectedOutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleId");

                    b.HasIndex("PackageId");

                    b.HasIndex("WarehouseLocationId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.WarehouseLocation", b =>
                {
                    b.Property<int>("WarehouseLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseLocationId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Dimension")
                        .HasColumnType("int");

                    b.HasKey("WarehouseLocationId");

                    b.ToTable("WarehouseLocations");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Package", b =>
                {
                    b.HasOne("WarehouseManagement.Entits.Containerr", "container")
                        .WithMany("Packages")
                        .HasForeignKey("ContainerId");

                    b.HasOne("WarehouseManagement.Entits.Customer", "customer")
                        .WithMany("Packages")
                        .HasForeignKey("CustomerId");

                    b.HasOne("WarehouseManagement.Entits.Supplier", "supplier")
                        .WithMany("Packages")
                        .HasForeignKey("SupplierId");

                    b.Navigation("container");

                    b.Navigation("customer");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Schedule", b =>
                {
                    b.HasOne("WarehouseManagement.Entits.Package", "package")
                        .WithMany("Schedules")
                        .HasForeignKey("PackageId");

                    b.HasOne("WarehouseManagement.Entits.WarehouseLocation", "warehouseLocation")
                        .WithMany("Schedules")
                        .HasForeignKey("WarehouseLocationId");

                    b.Navigation("package");

                    b.Navigation("warehouseLocation");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Containerr", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Customer", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Package", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.Supplier", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("WarehouseManagement.Entits.WarehouseLocation", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
